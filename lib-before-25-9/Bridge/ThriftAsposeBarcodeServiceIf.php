<?php
namespace Aspose\Barcode\Bridge;

/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

interface ThriftAsposeBarcodeServiceIf
{
    /**
     * @return \Aspose\Barcode\Bridge\BarcodeReaderDTO
     */
    public function BarcodeReader_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\BarcodeReaderDTO $thriftBarcodeReader
     * @param string $base64LicenseContent
     * @return \Aspose\Barcode\Bridge\BarcodeReaderDTO
     * @throws \Aspose\Barcode\Bridge\BarcodeExceptionDTO
     */
    public function BarcodeReader_readBarCodes(\Aspose\Barcode\Bridge\BarcodeReaderDTO $thriftBarcodeReader, $base64LicenseContent);
    /**
     * @param \Aspose\Barcode\Bridge\BarcodeReaderDTO $thriftBarcodeReader
     * @return string
     */
    public function BarcodeReader_exportToXml(\Aspose\Barcode\Bridge\BarcodeReaderDTO $thriftBarcodeReader);
    /**
     * @param string $source
     * @return \Aspose\Barcode\Bridge\BarcodeReaderDTO
     */
    public function BarcodeReader_importFromXml($source);
    /**
     * @param string $bytesArray
     * @param string $encoding
     * @return string
     */
    public function BarcodeResult_getCodeTextWithEncoding($bytesArray, $encoding);
    /**
     * @return \Aspose\Barcode\Bridge\QualitySettingsDTO
     */
    public function QualitySettings_getHighPerformance();
    /**
     * @return \Aspose\Barcode\Bridge\QualitySettingsDTO
     */
    public function QualitySettings_getNormalQuality();
    /**
     * @return \Aspose\Barcode\Bridge\QualitySettingsDTO
     */
    public function QualitySettings_getHighQuality();
    /**
     * @return \Aspose\Barcode\Bridge\QualitySettingsDTO
     */
    public function QualitySettings_getMaxQuality();
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle
     * @param \Aspose\Barcode\Bridge\PointDTO $point
     * @return bool
     */
    public function Quadrangle_containsPoint(\Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle, \Aspose\Barcode\Bridge\PointDTO $point);
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle
     * @param int $x
     * @param int $y
     * @return bool
     */
    public function Quadrangle_containsCoordinates(\Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle, $x, $y);
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $anotherQuadrangle
     * @return bool
     */
    public function Quadrangle_containsQuadrangle(\Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle, \Aspose\Barcode\Bridge\QuadrangleDTO $anotherQuadrangle);
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle
     * @param \Aspose\Barcode\Bridge\RectangleDTO $rectangle
     * @return bool
     */
    public function Quadrangle_containsRectangle(\Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle, \Aspose\Barcode\Bridge\RectangleDTO $rectangle);
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle
     * @return \Aspose\Barcode\Bridge\RectangleDTO
     */
    public function Quadrangle_getBoundingRectangle(\Aspose\Barcode\Bridge\QuadrangleDTO $thisQuadrangle);
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $quadrangleDTO
     * @return string
     */
    public function Quadrangle_toString(\Aspose\Barcode\Bridge\QuadrangleDTO $quadrangleDTO);
    /**
     * @param \Aspose\Barcode\Bridge\Code128DataPortionDTO $code128DataPortionDTO
     * @return string
     */
    public function Code128DataPortion_toString(\Aspose\Barcode\Bridge\Code128DataPortionDTO $code128DataPortionDTO);
    /**
     * @param int $encodeType
     * @return \Aspose\Barcode\Bridge\BarcodeGeneratorDTO
     */
    public function BarcodeGenerator_ctor($encodeType);
    /**
     * @param \Aspose\Barcode\Bridge\BarcodeGeneratorDTO $barcodeGeneratorDTO
     * @param int $imageFormat
     * @param string $base64LicenseContent
     * @return string
     * @throws \Aspose\Barcode\Bridge\BarcodeExceptionDTO
     */
    public function BarcodeGenerator_generateBarCodeImage(\Aspose\Barcode\Bridge\BarcodeGeneratorDTO $barcodeGeneratorDTO, $imageFormat, $base64LicenseContent);
    /**
     * @param string $source
     * @return \Aspose\Barcode\Bridge\BarcodeGeneratorDTO
     * @throws \Aspose\Barcode\Bridge\BarcodeExceptionDTO
     */
    public function BarcodeGenerator_importFromXml($source);
    /**
     * @param \Aspose\Barcode\Bridge\BarcodeGeneratorDTO $barcodeGeneratorDTO
     * @return string
     * @throws \Aspose\Barcode\Bridge\BarcodeExceptionDTO
     */
    public function BarcodeGenerator_exportToXml(\Aspose\Barcode\Bridge\BarcodeGeneratorDTO $barcodeGeneratorDTO);
    /**
     * @param \Aspose\Barcode\Bridge\BaseGenerationParametersDTO $baseGenerationParameters
     * @param double $resolution
     * @return \Aspose\Barcode\Bridge\BaseGenerationParametersDTO
     */
    public function BaseGenerationParameters_updateResolution(\Aspose\Barcode\Bridge\BaseGenerationParametersDTO $baseGenerationParameters, $resolution);
    /**
     * @param \Aspose\Barcode\Bridge\ExtCodeItemDTO[] $extCodeItems
     * @return string
     */
    public function HanXinExtCodetextBuilder_getExtendedCodetext(array $extCodeItems);
    /**
     * @param \Aspose\Barcode\Bridge\CodetextParametersDTO $CodetextParametersDto
     * @return string
     */
    public function CodetextParameters_toString(\Aspose\Barcode\Bridge\CodetextParametersDTO $CodetextParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\PostalParametersDTO $PostalParametersDto
     * @return string
     */
    public function PostalParameters_toString(\Aspose\Barcode\Bridge\PostalParametersDTO $PostalParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\AustralianPostParametersDTO $AustralianPostParametersDto
     * @return string
     */
    public function AustralianPostParameters_toString(\Aspose\Barcode\Bridge\AustralianPostParametersDTO $AustralianPostParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\CodablockParametersDTO $CodablockParametersDto
     * @return string
     */
    public function CodablockParameters_toString(\Aspose\Barcode\Bridge\CodablockParametersDTO $CodablockParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\DataBarParametersDTO $DataBarParametersDto
     * @return string
     */
    public function DataBarParameters_toString(\Aspose\Barcode\Bridge\DataBarParametersDTO $DataBarParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\DataMatrixParametersDTO $DataMatrixParametersDto
     * @return string
     */
    public function DataMatrixParameters_toString(\Aspose\Barcode\Bridge\DataMatrixParametersDTO $DataMatrixParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\Code16KParametersDTO $Code16KParametersDto
     * @return string
     */
    public function Code16KParameters_toString(\Aspose\Barcode\Bridge\Code16KParametersDTO $Code16KParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\DotCodeParametersDTO $DotCodeParametersDto
     * @return string
     */
    public function DotCodeParameters_toString(\Aspose\Barcode\Bridge\DotCodeParametersDTO $DotCodeParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\GS1CompositeBarParametersDTO $GS1CompositeBarParametersDto
     * @return string
     */
    public function GS1CompositeBarParameters_toString(\Aspose\Barcode\Bridge\GS1CompositeBarParametersDTO $GS1CompositeBarParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\ITFParametersDTO $ITFParametersDto
     * @return string
     */
    public function ITFParameters_toString(\Aspose\Barcode\Bridge\ITFParametersDTO $ITFParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\QrParametersDTO $QrParametersDto
     * @return string
     */
    public function QrParameters_toString(\Aspose\Barcode\Bridge\QrParametersDTO $QrParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\Pdf417ParametersDTO $Pdf417ParametersDto
     * @return string
     */
    public function Pdf417Parameters_toString(\Aspose\Barcode\Bridge\Pdf417ParametersDTO $Pdf417ParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\SupplementParametersDTO $SupplementParametersDto
     * @return string
     */
    public function SupplementParameters_toString(\Aspose\Barcode\Bridge\SupplementParametersDTO $SupplementParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\MaxiCodeParametersDTO $MaxiCodeParametersDto
     * @return string
     */
    public function MaxiCodeParameters_toString(\Aspose\Barcode\Bridge\MaxiCodeParametersDTO $MaxiCodeParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\PatchCodeParametersDTO $PatchCodeParametersDto
     * @return string
     */
    public function PatchCodeParameters_toString(\Aspose\Barcode\Bridge\PatchCodeParametersDTO $PatchCodeParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\Code128ParametersDTO $Code128ParametersDto
     * @return string
     */
    public function Code128Parameters_toString(\Aspose\Barcode\Bridge\Code128ParametersDTO $Code128ParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\HanXinParametersDTO $HanXinParametersDto
     * @return string
     */
    public function HanXinParameters_toString(\Aspose\Barcode\Bridge\HanXinParametersDTO $HanXinParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\AztecParametersDTO $AztecParametersDto
     * @return string
     */
    public function AztecParameters_toString(\Aspose\Barcode\Bridge\AztecParametersDTO $AztecParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\CodabarParametersDTO $CodabarParametersDto
     * @return string
     */
    public function CodabarParameters_toString(\Aspose\Barcode\Bridge\CodabarParametersDTO $CodabarParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\CouponParametersDTO $CouponParametersDto
     * @return string
     */
    public function CouponParameters_toString(\Aspose\Barcode\Bridge\CouponParametersDTO $CouponParametersDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $unitDto
     * @return double
     */
    public function Unit_getPixels(\Aspose\Barcode\Bridge\UnitDTO $unitDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $unitDto
     * @return double
     */
    public function Unit_getInches(\Aspose\Barcode\Bridge\UnitDTO $unitDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $unitDto
     * @return double
     */
    public function Unit_getMillimeters(\Aspose\Barcode\Bridge\UnitDTO $unitDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $unitDto
     * @return double
     */
    public function Unit_getPoint(\Aspose\Barcode\Bridge\UnitDTO $unitDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $unitDto
     * @return double
     */
    public function Unit_getDocument(\Aspose\Barcode\Bridge\UnitDTO $unitDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $unitDto
     * @return string
     */
    public function Unit_toString(\Aspose\Barcode\Bridge\UnitDTO $unitDto);
    /**
     * @param \Aspose\Barcode\Bridge\UnitDTO $obj1
     * @param \Aspose\Barcode\Bridge\UnitDTO $obj2
     * @return bool
     */
    public function Unit_equals(\Aspose\Barcode\Bridge\UnitDTO $obj1, \Aspose\Barcode\Bridge\UnitDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\PaddingDTO $PaddingDto
     * @return string
     */
    public function Padding_toString(\Aspose\Barcode\Bridge\PaddingDTO $PaddingDto);
    /**
     * @param \Aspose\Barcode\Bridge\BorderParametersDTO $BorderParametersDto
     * @return string
     */
    public function BorderParameters_toString(\Aspose\Barcode\Bridge\BorderParametersDTO $BorderParametersDto);
    /**
     * @param int $codeTextBuilderType
     * @param \Aspose\Barcode\Bridge\ExtCodeItemDTO[] $extCodeItems
     * @return string
     */
    public function ExtCodetextBuilder_getExtendedCodetext($codeTextBuilderType, array $extCodeItems);
    /**
     * @param int $maxiCodeMode
     * @param string $encodedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function ComplexCodetextReader_tryDecodeMaxiCode($maxiCodeMode, $encodedCodetext);
    /**
     * @param string $encodedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     * @throws \Aspose\Barcode\Bridge\NullValueException
     */
    public function ComplexCodetextReader_tryDecodeHIBCLIC($encodedCodetext);
    /**
     * @param string $encodedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function ComplexCodetextReader_tryDecodeSwissQR($encodedCodetext);
    /**
     * @param string $encodedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function ComplexCodetextReader_tryDecodeMailmark2D($encodedCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MailmarkCodetext_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\ComplexBarcodeGeneratorDTO $complexBarcodeGeneratorDTO
     * @param int $imageFormat
     * @param string $base64LicenseContent
     * @return string
     */
    public function ComplexBarcodeGenerator_generateBarcodeImage(\Aspose\Barcode\Bridge\ComplexBarcodeGeneratorDTO $complexBarcodeGeneratorDTO, $imageFormat, $base64LicenseContent);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $complexCodetext
     * @return \Aspose\Barcode\Bridge\ComplexBarcodeGeneratorDTO
     */
    public function ComplexBarcodeGenerator_ctor(\Aspose\Barcode\Bridge\IComplexCodetextDTO $complexCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function Mailmark2DCodetext_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmarkCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MailmarkCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmarkCodetext, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmarkCodetext
     * @return string
     */
    public function MailmarkCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmarkCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function SwissQRCodetext_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\SwissQRBillDTO $swissQRBill
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function SwissQRCodetext_ctorSwissQRBill(\Aspose\Barcode\Bridge\SwissQRBillDTO $swissQRBill);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $swissQRCodetext
     * @return string
     */
    public function SwissQRCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $swissQRCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\SwissQRBillDTO $obj1
     * @param \Aspose\Barcode\Bridge\SwissQRBillDTO $obj2
     * @return bool
     */
    public function SwissQRBill_equals(\Aspose\Barcode\Bridge\SwissQRBillDTO $obj1, \Aspose\Barcode\Bridge\SwissQRBillDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\SwissQRBillDTO $swissQRBillDTO
     * @param string $rawReference
     * @return \Aspose\Barcode\Bridge\SwissQRBillDTO
     */
    public function SwissQRBill_createAndSetCreditorReference(\Aspose\Barcode\Bridge\SwissQRBillDTO $swissQRBillDTO, $rawReference);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MaxiCodeStandardCodetext_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj1
     * @param \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj2
     * @return bool
     */
    public function MaxiCodeStandartSecondMessage_equals(\Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj1, \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function MaxiCodeStandardCodetext_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function HIBCLICPrimaryDataCodetext_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function HIBCLICCombinedCodetext_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function HIBCLICSecondaryAndAdditionalDataCodetext_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICPrimaryDataCodetext
     * @return string
     */
    public function HIBCLICPrimaryDataCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICPrimaryDataCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCPASCodetext
     * @return string
     */
    public function HIBCPASCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCPASCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function HIBCPASCodetext_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @return int
     */
    public function HIBCPASCodetext_hashCode(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCPASCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCPASCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCPASCodetext, $constructedCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCPASCodetext_ctor();
    /**
     * @param string $encodedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function ComplexCodetextReader_tryDecodeHIBCPAS($encodedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICSecondaryAndAdditionalDataCodetext
     * @return string
     */
    public function HIBCLICSecondaryAndAdditionalDataCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICSecondaryAndAdditionalDataCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICSecondaryAndAdditionalDataCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCLICSecondaryAndAdditionalDataCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICSecondaryAndAdditionalDataCodetext, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmark2DCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function Mailmark2DCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmark2DCodetext, $constructedCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCLICSecondaryAndAdditionalDataCodetext_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICCombinedCodetext
     * @return string
     */
    public function HIBCLICCombinedCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICCombinedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmark2DCodetext
     * @return string
     */
    public function Mailmark2DCodetext_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $mailmark2DCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO
     */
    public function SecondaryAndAdditionalData_ctor();
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCLICCombinedCodetext_ctor();
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCLICPrimaryDataCodetext_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICCombinedCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCLICCombinedCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICCombinedCodetext, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICPrimaryDataCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function HIBCLICPrimaryDataCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $HIBCLICPrimaryDataCodetext, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $secondaryAndAdditionalDataDTO
     * @return string
     */
    public function SecondaryAndAdditionalData_toString(\Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $secondaryAndAdditionalDataDTO);
    /**
     * @param \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $secondaryAndAdditionalDataDTO
     * @param string $secondaryDataCodetext
     * @return \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO
     */
    public function SecondaryAndAdditionalData_parseFromString(\Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $secondaryAndAdditionalDataDTO, $secondaryDataCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $obj1
     * @param \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $obj2
     * @return bool
     */
    public function SecondaryAndAdditionalData_equals(\Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $obj1, \Aspose\Barcode\Bridge\SecondaryAndAdditionalDataDTO $obj2);
    /**
     * @return \Aspose\Barcode\Bridge\PrimaryDataDTO
     */
    public function PrimaryData_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\PrimaryDataDTO $primaryDataDTO
     * @return string
     */
    public function PrimaryData_toString(\Aspose\Barcode\Bridge\PrimaryDataDTO $primaryDataDTO);
    /**
     * @param \Aspose\Barcode\Bridge\PrimaryDataDTO $primaryDataDTO
     * @param string $primaryDataCodetext
     * @return \Aspose\Barcode\Bridge\PrimaryDataDTO
     */
    public function PrimaryData_parseFromString(\Aspose\Barcode\Bridge\PrimaryDataDTO $primaryDataDTO, $primaryDataCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\PrimaryDataDTO $obj1
     * @param \Aspose\Barcode\Bridge\PrimaryDataDTO $obj2
     * @return bool
     */
    public function PrimaryData_equals(\Aspose\Barcode\Bridge\PrimaryDataDTO $obj1, \Aspose\Barcode\Bridge\PrimaryDataDTO $obj2);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MaxiCodeCodetextMode2_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function MaxiCodeCodetextMode2_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MaxiCodeCodetextMode2_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, $constructedCodetext);
    /**
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MaxiCodeCodetextMode3_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2
     * @return bool
     */
    public function MaxiCodeCodetextMode3_equals(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MaxiCodeCodetextMode3_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $obj1, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $swissQRCodetext
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function SwissQRCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $swissQRCodetext, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $maxiCodeStandardCodetex
     * @param string $constructedCodetext
     * @return \Aspose\Barcode\Bridge\IComplexCodetextDTO
     */
    public function MaxiCodeStandardCodetext_initFromString(\Aspose\Barcode\Bridge\IComplexCodetextDTO $maxiCodeStandardCodetex, $constructedCodetext);
    /**
     * @param \Aspose\Barcode\Bridge\HIBCPASRecordDTO $obj1
     * @param \Aspose\Barcode\Bridge\HIBCPASRecordDTO $obj2
     * @return bool
     */
    public function HIBCPASRecord_equals(\Aspose\Barcode\Bridge\HIBCPASRecordDTO $obj1, \Aspose\Barcode\Bridge\HIBCPASRecordDTO $obj2);
    /**
     * @return \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO
     */
    public function MaxiCodeStandartSecondMessage_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $maxiCodeStructuredSecondMessage
     * @return string
     */
    public function MaxiCodeStructuredSecondMessage_getMessage(\Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $maxiCodeStructuredSecondMessage);
    /**
     * @param \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $maxiCodeStandartSecondMessage
     * @return string
     */
    public function MaxiCodeStandartSecondMessage_getMessage(\Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $maxiCodeStandartSecondMessage);
    /**
     * @return \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO
     */
    public function MaxiCodeStructuredSecondMessage_ctor();
    /**
     * @param \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj_1
     * @param \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj_2
     * @return bool
     */
    public function MaxiCodeStructuredSecondMessage_equals(\Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj_1, \Aspose\Barcode\Bridge\MaxiCodeSecondMessageDTO $obj_2);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $maxiCodeCodetextMode2DTO
     * @return string
     */
    public function MaxiCodeCodetextMode2_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $maxiCodeCodetextMode2DTO);
    /**
     * @param \Aspose\Barcode\Bridge\IComplexCodetextDTO $maxiCodeCodetextMode3DTO
     * @return string
     */
    public function MaxiCodeCodetextMode3_getConstructedCodetext(\Aspose\Barcode\Bridge\IComplexCodetextDTO $maxiCodeCodetextMode3DTO);
    /**
     * @param \Aspose\Barcode\Bridge\AlternativeSchemeDTO $obj1
     * @param \Aspose\Barcode\Bridge\AlternativeSchemeDTO $obj2
     * @return bool
     */
    public function AlternativeScheme_equals(\Aspose\Barcode\Bridge\AlternativeSchemeDTO $obj1, \Aspose\Barcode\Bridge\AlternativeSchemeDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\AddressDTO $obj1
     * @param \Aspose\Barcode\Bridge\AddressDTO $obj2
     * @return bool
     */
    public function Address_equals(\Aspose\Barcode\Bridge\AddressDTO $obj1, \Aspose\Barcode\Bridge\AddressDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $obj1
     * @param \Aspose\Barcode\Bridge\QuadrangleDTO $obj2
     * @return bool
     */
    public function Quadrangle_equals(\Aspose\Barcode\Bridge\QuadrangleDTO $obj1, \Aspose\Barcode\Bridge\QuadrangleDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\GS1CompositeBarExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\GS1CompositeBarExtendedParametersDTO $obj2
     * @return bool
     */
    public function GS1CompositeBarExtendedParameters_equals(\Aspose\Barcode\Bridge\GS1CompositeBarExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\GS1CompositeBarExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\AztecExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\AztecExtendedParametersDTO $obj2
     * @return bool
     */
    public function AztecExtendedParameters_equals(\Aspose\Barcode\Bridge\AztecExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\AztecExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\DataMatrixExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\DataMatrixExtendedParametersDTO $obj2
     * @return bool
     */
    public function DataMatrixExtendedParameters_equals(\Aspose\Barcode\Bridge\DataMatrixExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\DataMatrixExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\DotCodeExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\DotCodeExtendedParametersDTO $obj2
     * @return bool
     */
    public function DotCodeExtendedParameters_equals(\Aspose\Barcode\Bridge\DotCodeExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\DotCodeExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\MaxiCodeExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\MaxiCodeExtendedParametersDTO $obj2
     * @return bool
     */
    public function MaxiCodeExtendedParameters_equals(\Aspose\Barcode\Bridge\MaxiCodeExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\MaxiCodeExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\DataBarExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\DataBarExtendedParametersDTO $obj2
     * @return bool
     */
    public function DataBarExtendedParameters_equals(\Aspose\Barcode\Bridge\DataBarExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\DataBarExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\Pdf417ExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\Pdf417ExtendedParametersDTO $obj2
     * @return bool
     */
    public function Pdf417ExtendedParameters_equals(\Aspose\Barcode\Bridge\Pdf417ExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\Pdf417ExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\QRExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\QRExtendedParametersDTO $obj2
     * @return bool
     */
    public function QRExtendedParameters_equals(\Aspose\Barcode\Bridge\QRExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\QRExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\Code128ExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\Code128ExtendedParametersDTO $obj2
     * @return bool
     */
    public function Code128ExtendedParameters_equals(\Aspose\Barcode\Bridge\Code128ExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\Code128ExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\OneDExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\OneDExtendedParametersDTO $obj2
     * @return bool
     */
    public function OneDExtendedParameters_equals(\Aspose\Barcode\Bridge\OneDExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\OneDExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\BarCodeExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\BarCodeExtendedParametersDTO $obj2
     * @return bool
     */
    public function BarCodeExtendedParameters_equals(\Aspose\Barcode\Bridge\BarCodeExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\BarCodeExtendedParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\BarCodeRegionParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\BarCodeRegionParametersDTO $obj2
     * @return bool
     */
    public function BarCodeRegionParameters_equals(\Aspose\Barcode\Bridge\BarCodeRegionParametersDTO $obj1, \Aspose\Barcode\Bridge\BarCodeRegionParametersDTO $obj2);
    /**
     * @param \Aspose\Barcode\Bridge\CodabarExtendedParametersDTO $obj1
     * @param \Aspose\Barcode\Bridge\CodabarExtendedParametersDTO $obj2
     * @return bool
     */
    public function CodabarExtendedParameters_equals(\Aspose\Barcode\Bridge\CodabarExtendedParametersDTO $obj1, \Aspose\Barcode\Bridge\CodabarExtendedParametersDTO $obj2);
    /**
     * @param int $symbology
     * @return bool
     */
    public function DecodeType_is1D($symbology);
    /**
     * @param int $symbology
     * @return bool
     */
    public function DecodeType_isPostal($symbology);
    /**
     * @param int $symbology
     * @return bool
     */
    public function DecodeType_is2D($symbology);
    /**
     * @param string $base64LicenseContent
     */
    public function LicensePHP_setLicense($base64LicenseContent);
    /**
     */
    public function LicensePHP_resetLicense();
    /**
     * @return bool
     */
    public function LicensePHP_isLicensed();
}
